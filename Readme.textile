h1. DCTAuth

A library for performing authorised web requests to services using OAuth, OAuth 2.0 and basic authentiaction.

h2. Features

* Multiple account type architecture
** Built-in support for OAuth, OAuth 2.0 and Basic authentication
** Add extra headers to authentication requests
** Create your own custom authentication system

* Works on Mac and iOS
** OS X 10.7+
** iOS 5+

* Web view authorization step
** Launch Safari and return with a callback URL
** Provide in-app web view

* Keychain
** Accounts save to the keychain
** Supports iCloud Keychain sync
** Supports keychain access groups

* Account Stores
** Multiple account stores, for different types of account
** KVO accounts property for easy listing of accounts

h2. Documentation

DCTAuth is "fully documented":http://danieltull.co.uk/DCTAuth/documentation/ and there is a "feed for the docset":http://danieltull.co.uk/DCTAuth/documentation/docset.atom that you can add to Xcode.

h2. Known working services

While the implementations _should_ work for all services using that standard, I can confirm that they work for the following providers:

h3. OAuth

* "Bitbucket":https://confluence.atlassian.com/display/BITBUCKET/oauth+Endpoint
* "Dropbox":http://www.dropbox.com/developers/reference/api
* "Fitbit":http://dev.fitbit.com
* "Flickr":http://www.flickr.com/services/api/auth.oauth.html
* "Goodreads":https://www.goodreads.com/api/documentation
* "Plurk":http://www.plurk.com/API
* "Readability":http://www.readability.com/developers/api
* "Trello":https://trello.com/docs/gettingstarted/oauth.html
* "TripIt":http://tripit.github.com/api/doc/v1/#authentication_section
* "Twitter":https://dev.twitter.com/docs/auth/oauth
* "Xero":http://developer.xero.com/documentation/getting-started/public-applications/ ("Notes":#xero)
* "Yahoo!":http://developer.yahoo.com/oauth/guide/index.html

h3. OAuth 2.0

* "37signals":https://github.com/37signals/api/blob/master/sections/authentication.md#oauth-2 ("Notes":#37signals)
* "Box":http://developers.box.com/oauth/
* "Facebook":https://developers.facebook.com/docs/authentication/ ("Notes":#facebook)
* "Foursquare":https://developer.foursquare.com/overview/auth.html (Code and Token flow)
* "GitHub":http://developer.github.com/v3/oauth/
* "Google":https://developers.google.com/accounts/docs/OAuth2InstalledApp (Installed Applications)
* "Instagram":http://instagram.com/developer/authentication/ (Explicit and Implicit flow)
* "LinkedIn":http://developer.linkedin.com/documents/authentication
* "SoundCloud":http://developers.soundcloud.com/docs#authentication
* "Windows Live":http://msdn.microsoft.com/en-us/library/live/hh826541.aspx ("Notes":#windows-live)

h3. Basic Authentication

* "Instapaper":http://www.instapaper.com/api/simple
* "JIRA":https://developer.atlassian.com/display/JIRADEV/JIRA+REST+API+Example+-+Basic+Authentication
* "Pinboard":http://pinboard.in/api
* "Redmine":http://www.redmine.org/projects/redmine/wiki/Rest_api#Authentication

h2. Service Notes

h3. Facebook

Facebook require the callback URL to be in the format fbXXX://blah/ where XXX is your app ID.

h3. Windows Live

Microsoft have enforced that the callback URL (redirect URI) must have a scheme of HTTP or HTTPS, so to authorise with Windows Live you should set your own URL handler on the DCTAuth class to open the authorization URL in a web view inside the app. This does go against general OAuth practice, but DCTAuth allows it. Setting a callback URL with http:// as the scheme will result in working authentication to Windows Live. As far as I can tell you should use at least `wl.signin` as the scope.

h3. 37signals

37signals require a @type@ parameter to be passed into all authentication calls. To deal with this DCTAuth 3 includes @[DCTAuthAccount setParameters:forRequestType:]@ which allows you to add service specific parameters to the different requests.

To get 37signals auth working, you use the following code:

<pre><code>NSURL *authorizeURL = [NSURL URLWithString:@"https://launchpad.37signals.com/authorization/new"];
NSURL *accessTokenURL = [NSURL URLWithString:@"https://launchpad.37signals.com/authorization/token"]
DCTAuthAccount *campfireAccount = [DCTAuthAccount OAuth2AccountWithType:@"Campfire"
                                                           authorizeURL:authorizeURL
                                                         accessTokenURL:accessTokenURL
                                                               clientID:@"client_id"
                                                           clientSecret:@"client_secret"
                                                                 scopes:nil];
campfireAccount.callbackURL = [NSURL URLWithString:@"callback://url"];
NSDictionary *parameters = @{ @"type" : @"web_server" };
[campfireAccount setParameters:parameters forRequestType:DCTOAuth2AccountAccessTokenRequestType];
[campfireAccount setParameters:parameters forRequestType:DCTOAuth2AccountAuthorizeRequestType];</code></pre>

h3. Xero

When making a public application, Xero says that supplying a domain name for the callback URL is optional, the format of which is explained "here":http://developer.xero.com/documentation/advanced-docs/oauth-callback-domains-explained/. It turns out that if we want a full OAuth experience, it is required, otherwise the user will be shown a number to type into the app (this is completely unsupported by DCTAuth, not to mention completely horrible).

So the domain on the "application's settings":https://api.xero.com/Application is set to @danieltull.co.uk@,  the callback URL should use a scheme, for example @dctauth://danieltull.co.uk@. The domain must match the one given in the application settings, though you can also add a subdomain like so: @dctauth://subdomain.danieltull.co.uk@.

h2. License

Copyright (C) 2012 Daniel Tull. All rights reserved.
 
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 
* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 
* Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.